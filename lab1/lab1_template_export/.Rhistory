p <- p + scale_color_gradient(low='blue', high='red') + geom_point(alpha=1/2)
p <- p + ylab("Temperature (C)")
p <- p + xlab("Humidity (%)")
p <- p + theme(legend.title="Voltage (V)")
p <- p + ggtitle("Temperature vs. Humidity Colored by Mote Voltage")
p
p <- ggplot(Apr.30.selection,aes(x=hamabot,y=hamatop, col=voltage))
p <- p + scale_color_gradient(low='blue', high='red') + geom_point(alpha=1/2)
p <- p + ylab("Outgoing Light (umol/m^2/s)")
p <- p + xlab("Incoming Light (umol/m^2/s)")
p <- p + theme(legend.title="Voltage (V)")
p <- p + ggtitle("Temperature vs. Humidity Colored by Mote Voltage")
p
p <- ggplot(Apr.30.selection,aes(x=hamatop,y=hamabot, col=voltage))
p <- p + scale_color_gradient(low='blue', high='red') + geom_point(alpha=1/2)
p <- p + ylab("Outgoing Light (umol/m^2/s)")
p <- p + xlab("Incoming Light (umol/m^2/s)")
p <- p + ggtitle("Outgoing vs. Incoming Light Colored by Mote Voltage")
p
cor(merged$hamatop.x, merged$hamatop.y, use='pairwise.complete.obs') # almost exactly the same
cor(merged$hamabot.x, merged$hamabot.y, use='pairwise.complete.obs') # almost exactly the same
cor(merged$voltage.x, merged$voltage.y, use='pairwise.complete.obs')
cor(merged$voltage.x, merged$voltage.y, use='pairwise.complete.obs')
head(merged$voltage.x); head(merged$voltage.y)
cor(merged$voltage.x, 100*merged$voltage.y, use='pairwise.complete.obs')
cor(merged$voltage.x, 100000*merged$voltage.y, use='pairwise.complete.obs')
plot(merged$voltage.x, 100*merged$voltage.y)
plot(merged$voltage.y, 100*merged$voltage.x)
head(moteloc_data)
rmhum.dates.log$humid_temp
sort(rmhum.dates.log$humid_temp)
Apr.30.selection <- interior.selection[grepl("2004-04-30", interior.selection$datetime),]
Apr.30.selection.node <- Apr.30.selection[Apr.30.selection$nodeid == 197,]
p <- ggplot(Apr.30.selection.node, aes(x = epoch))
p <- p + geom_line(aes(y = humid_temp, colour = "Temperature (C)"))
p <- p + ylab("Temperature (C)")
p <- p + ggtitle("Temperature and Humidity for Node 197 on April 30th 2017")
p <- p + geom_line(aes(y = humidity/5, colour = "Humidity (%)"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*5, name = "Humidity (%)"))
p <- p + theme(legend.title=element_blank())
p <- p + ylab("Time of Day")
p
p <- p + scale_x_discrete(breaks=c(800,900,1000), labels=c('fee','fi','fo'))
p
p <- ggplot(Apr.30.selection.node, aes(x = epoch))
p <- p + geom_line(aes(y = humid_temp, colour = "Temperature (C)"))
p <- p + ylab("Temperature (C)")
p <- p + ggtitle("Temperature and Humidity for Node 197 on April 30th 2017")
p <- p + geom_line(aes(y = humidity/5, colour = "Humidity (%)"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*5, name = "Humidity (%)"))
p <- p + theme(legend.title=element_blank())
p <- p + ylab("Time of Day")
p <- p + scale_x_discrete(breaks=c(800,900,1000), labels=c('fee','fi','fo'))
p
p <- p + scale_x_discrete(limits=c('fee','fi','fo'))
p <- ggplot(Apr.30.selection.node, aes(x = epoch))
p <- p + geom_line(aes(y = humid_temp, colour = "Temperature (C)"))
p <- p + ylab("Temperature (C)")
p <- p + ggtitle("Temperature and Humidity for Node 197 on April 30th 2017")
p <- p + geom_line(aes(y = humidity/5, colour = "Humidity (%)"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*5, name = "Humidity (%)"))
p <- p + theme(legend.title=element_blank())
p <- p + ylab("Temperature (C)")
p <- p + scale_x_discrete(limits=c('fee','fi','fo'))
p
p <- ggplot(Apr.30.selection.node, aes(x = epoch))
p <- p + geom_line(aes(y = humid_temp, colour = "Temperature (C)"))
p <- p + ylab("Temperature (C)")
p <- p + ggtitle("Temperature and Humidity for Node 197 on April 30th 2017")
p <- p + geom_line(aes(y = humidity/5, colour = "Humidity (%)"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*5, name = "Humidity (%)"))
p <- p + theme(legend.title=element_blank())
p <- p + ylab("Temperature (C)")
p <- p + scale_x_discrete(breaks=c("800","900","1000"), labels=c('fee','fi','fo'))
p
p <- ggplot(Apr.30.selection.node, aes(x = epoch))
p <- p + geom_line(aes(y = humid_temp, colour = "Temperature (C)"))
p <- p + scale_x_discrete(breaks=c("800","900","1000"), labels=c('fee','fi','fo'))
p <- p + ylab("Temperature (C)")
p <- p + ggtitle("Temperature and Humidity for Node 197 on April 30th 2017")
p <- p + geom_line(aes(y = humidity/5, colour = "Humidity (%)"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*5, name = "Humidity (%)"))
p <- p + theme(legend.title=element_blank())
p <- p + ylab("Temperature (C)")
p
p <- ggplot(Apr.30.selection.node, aes(x = epoch))
p <- p + geom_line(aes(y = humid_temp, colour = "Temperature (C)"))
p <- p + ylab("Temperature (C)")
p <- p + ggtitle("Temperature and Humidity for Node 197 on April 30th 2017")
p <- p + geom_line(aes(y = humidity/5, colour = "Humidity (%)"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*5, name = "Humidity (%)"))
p <- p + theme(legend.title=element_blank())
p <- p + ylab("Temperature (C)")
p
p <- ggplot(Apr.30.selection.node, aes(x = datetime))
p <- p + geom_line(aes(y = humid_temp, colour = "Temperature (C)"))
p <- p + ylab("Temperature (C)")
p <- p + ggtitle("Temperature and Humidity for Node 197 on April 30th 2017")
p <- p + geom_line(aes(y = humidity/5, colour = "Humidity (%)"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*5, name = "Humidity (%)"))
p <- p + theme(legend.title=element_blank())
p <- p + ylab("Temperature (C)")
p
p <- ggplot(Apr.30.selection.node, aes(x = datetime))
p <- p + geom_line(aes(y = humid_temp, colour = "Temperature (C)"))
p <- p + ylab("Temperature (C)")
p <- p + xlab("Date and Time")
p <- p + ggtitle("Temperature and Humidity for Node 197 on April 30th 2017")
p <- p + geom_line(aes(y = humidity/5, colour = "Humidity (%)"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*5, name = "Humidity (%)"))
p <- p + theme(legend.title=element_blank())
p <- p + ylab("Temperature (C)")
p
Apr.30.selection[Apr.30.selection$voltage>2,]
mean_sunlight = c()
mean_height = c()
Apr.30.subselection <- Apr.30.selection[Apr.30.selection$voltage>2,]
head(Apr.30.subselection)
Apr.30.subselection <- Apr.30.selection[Apr.30.selection$voltage>2,]
for (i in unique(Apr.30.subselection$nodeid)) {
mean_sunlight <- c(mean(Apr.30.subselection[Apr.30.subselection$nodeid == i,]$hamatop), mean_sunlight)
mean_height <- c(mean(Apr.30.subselection[Apr.30.subselection$nodeid == i,]$Height), mean_height)
}
mean_sunlight = c()
mean_height = c()
mean_temp = c()
for (i in unique(Apr.30.subselection$nodeid)) {
mean_sunlight <- c(mean_sunlight, mean(Apr.30.subselection[Apr.30.subselection$nodeid == i,]$hamatop))
mean_height <- c(mean_height, mean(Apr.30.subselection[Apr.30.subselection$nodeid == i,]$Height))
mean_temp <- c(mean_temp, mean(Apr.30.subselection[Apr.30.subselection$nodeid == i,]$humid_temp))
}
Apr.30.sundata <- data.frame(unique(Apr.30.subselection$nodeid), mean_sunlight, mean_height, mean_temp)
names(Apr.30.sundata) <- c("nodeid", "msunlight", "mheight", "mtemp")
p <- plot_ly(Apr.30.sundata, x = ~msunlight, y = ~mheight, z = ~mtemp) %>%
add_markers() %>%
layout(title = 'Sunlight, Height, and Temperature on April 30th', scene = list(xaxis = list(title = 'Sunlight (umol/m^2/s)'),
yaxis = list(title = 'Height (m)'),
zaxis = list(title = 'Temperature (C)')))
p
lm(humid_temp ~ hamatop + Height, data = Apr.30.subselection)
summary(fit)
plotly_POST(p)
hist(Apr.30.subselection$voltage)
nrow(Apr.30.selection)
nrow(Apr.30.subselection)
length(unique(Apr.30.subselection$nodeid))
length(unique(Apr.30.selection$nodeid))
hist(Apr.30.subselection$voltage, breaks=10)
summary(fit)
fit <- glm(humid_temp ~ hamatop + Height, data = Apr.30.subselection)
summary(fit)
p <- plot_ly(Apr.30.sundata, x = ~msunlight, y = ~mheight, z = ~mtemp) %>%
add_markers() %>%
layout(title = 'Sunlight, Height, and Temperature on April 30th', scene = list(xaxis = list(title = 'Sunlight (umol/m^2/s)'),
yaxis = list(title = 'Height (m)'),
zaxis = list(title = 'Temperature (C)'))) %>%
add_trace(p, x = x, y = fitted(glm(mtemp~msunlight+mheight, data=Apr.30.sundata)), line = list(dash="dashed"), name="regression line")
p <- plot_ly(Apr.30.sundata, x = ~msunlight, y = ~mheight, z = ~mtemp) %>%
add_markers() %>%
layout(title = 'Sunlight, Height, and Temperature on April 30th', scene = list(xaxis = list(title = 'Sunlight (umol/m^2/s)'),
yaxis = list(title = 'Height (m)'),
zaxis = list(title = 'Temperature (C)'))) %>%
add_trace(p, x = mtemp, y = fitted(glm(mtemp~msunlight+mheight, data=Apr.30.sundata)), line = list(dash="dashed"), name="regression line")
p <- plot_ly(Apr.30.sundata, x = ~msunlight, y = ~mheight, z = ~mtemp) %>%
add_markers() %>%
layout(title = 'Sunlight, Height, and Temperature on April 30th', scene = list(xaxis = list(title = 'Sunlight (umol/m^2/s)'),
yaxis = list(title = 'Height (m)'),
zaxis = list(title = 'Temperature (C)'))) %>%
add_trace(p, x = Apr.30.sundata$msunlight, y = fitted(glm(mtemp~msunlight+mheight, data=Apr.30.sundata)), line = list(dash="dashed"), name="regression line")
p <- plot_ly(Apr.30.sundata, x = ~msunlight, y = ~mheight, z = ~mtemp) %>%
add_markers() %>%
layout(title = 'Sunlight, Height, and Temperature on April 30th', scene = list(xaxis = list(title = 'Sunlight (umol/m^2/s)'),
yaxis = list(title = 'Height (m)'),
zaxis = list(title = 'Temperature (C)'))) %>%
add_trace(p, x = Apr.30.sundata$msunlight, y = fitted(glm(mtemp~msunlight+mheight, data=Apr.30.sundata)), line = list(dash="dashed"), name="regression line")
p <- plot_ly(Apr.30.sundata, x = ~msunlight, y = ~mheight, z = ~mtemp) %>%
add_markers() %>%
layout(title = 'Sunlight, Height, and Temperature on April 30th', scene = list(xaxis = list(title = 'Sunlight (umol/m^2/s)'),
yaxis = list(title = 'Height (m)'),
zaxis = list(title = 'Temperature (C)'))) %>%
add_trace(p, x = Apr.30.sundata$msunlight, z = fitted(glm(mtemp~msunlight+mheight, data=Apr.30.sundata)), line = list(dash="dashed"), name="regression line")
p <- plot_ly(Apr.30.sundata, x = ~msunlight, y = ~mheight, z = ~mtemp) %>%
add_markers() %>%
layout(title = 'Sunlight, Height, and Temperature on April 30th', scene = list(xaxis = list(title = 'Sunlight (umol/m^2/s)'),
yaxis = list(title = 'Height (m)'),
zaxis = list(title = 'Temperature (C)'))) %>%
add_trace(p, x = Apr.30.sundata$msunlight, y = Apr.30.sundata$mheight, z = fitted(glm(mtemp~msunlight+mheight, data=Apr.30.sundata)), line = list(dash="dashed"), name="regression line")
p <- plot_ly(Apr.30.sundata, x = ~msunlight, y = ~mheight, z = ~mtemp) %>%
add_markers() %>%
layout(title = 'Sunlight, Height, and Temperature on April 30th', scene = list(xaxis = list(title = 'Sunlight (umol/m^2/s)'),
yaxis = list(title = 'Height (m)'),
zaxis = list(title = 'Temperature (C)'))) %>%
add_trace(p, x = Apr.30.sundata$msunlight, y = Apr.30.sundata$mheight, z = fitted(glm(mtemp~msunlight+mheight, data=Apr.30.sundata)), name="regression line")
p <- plot_ly(Apr.30.sundata, x = ~msunlight, y = ~mheight, z = ~mtemp) %>%
add_markers() %>%
plot_ly(Apr.30.sundata, x = ~msunlight*10, y = ~mheight*10, z = ~mtemp) %>%
add_markers() %>%
layout(title = 'Sunlight, Height, and Temperature on April 30th', scene = list(xaxis = list(title = 'Sunlight (umol/m^2/s)'),
yaxis = list(title = 'Height (m)'),
zaxis = list(title = 'Temperature (C)'))) %>%
add_trace(p, x = Apr.30.sundata$msunlight, y = Apr.30.sundata$mheight, z = fitted(glm(mtemp~msunlight+mheight, data=Apr.30.sundata)), name="regression line")
p <- plot_ly(Apr.30.sundata, x = ~msunlight, y = ~mheight, z = ~mtemp) %>%
add_markers() %>%
plot_ly(Apr.30.sundata, x = ~msunlight*10, y = ~mheight*10, z = ~mtemp) %>%
add_markers() %>%
layout(title = 'Sunlight, Height, and Temperature on April 30th', scene = list(xaxis = list(title = 'Sunlight (umol/m^2/s)'),
yaxis = list(title = 'Height (m)'),
zaxis = list(title = 'Temperature (C)')))
p <- plot_ly(data=Apr.30.sundata, x = ~msunlight, y = ~mheight, z = ~mtemp) %>%
add_markers() %>%
plot_ly(data=Apr.30.sundata, x = ~msunlight*10, y = ~mheight*10, z = ~mtemp) %>%
add_markers() %>%
layout(title = 'Sunlight, Height, and Temperature on April 30th', scene = list(xaxis = list(title = 'Sunlight (umol/m^2/s)'),
yaxis = list(title = 'Height (m)'),
zaxis = list(title = 'Temperature (C)')))
p <- plot_ly(data=Apr.30.sundata, x = ~msunlight, y = ~mheight, z = ~mtemp) %>%
add_markers() %>%
plot_ly(data=Apr.30.sundata, x = ~msunlight*10, y = ~mheight*10, z = ~mtemp) %>%
add_markers() %>%
layout(title = 'Sunlight, Height, and Temperature on April 30th', scene = list(xaxis = list(title = 'Sunlight (umol/m^2/s)'),
yaxis = list(title = 'Height (m)'),
zaxis = list(title = 'Temperature (C)')))
summary(fit)
Apr.30.sundata <- data.frame(unique(Apr.30.subselection$nodeid), mean_sunlight, mean_height, mean_temp)
names(Apr.30.sundata) <- c("nodeid", "msunlight", "mheight", "mtemp")
p <- plot_ly(data=Apr.30.sundata, x = ~msunlight, y = ~mheight, z = ~mtemp) %>%
add_markers() %>%
layout(title = 'Sunlight, Height, and Temperature on April 30th', scene = list(xaxis = list(title = 'Sunlight (umol/m^2/s)'),
yaxis = list(title = 'Height (m)'),
zaxis = list(title = 'Temperature (C)')))
htmlwidgets::saveWidget(as.widget(p), "graph.html")
htmlwidgets::saveWidget(as_widget(p), "graph.html")
htmlwidgets::saveWidget(as_widget(p), "graph3.html")
htmlwidgets::saveWidget(as_widget(p), "graph3.html")
fit <- lm(humid_temp ~ hamatop + Height, data = Apr.30.subselection)
summary(fit)
fit <- lm(humid_temp ~ hamatop + Height, data = Apr.30.subselection)
fit
summary(fit)
p <- ggplot(Apr.30.subselection, aes(mheight, mtemp, label = nodeid))
p
fit <- lm(humid_temp ~ hamatop + Height, data = Apr.30.sundata)
Apr.30.sundata
fit <- lm(humid_temp ~ hamatop + Height, data = Apr.30.sundata)
fit <- lm(mtemp ~ mheight + msunlight, data = Apr.30.sundata)
summary(fit)
p <- ggplot(Apr.30.sundata, aes(mheight, mtemp, label = nodeid))
p
p + geom_point()
p <- p + xlab("Height")
p <- p + geom_text(size=2, color = point_colors)
p <- p + geom_text(size=2)
p
p <- ggplot(Apr.30.sundata, aes(mheight, mtemp, label = nodeid))
p <- p + geom_text(size=2)
p <- p + geom_point(label)
p <- ggplot(Apr.30.sundata, aes(mheight, mtemp, label = nodeid))
p <- p + geom_point()
p <- p + ylab("Temperature (C)")
p
fit
coefficients(fit)
coefficients(fit)[2]
p <- p + geom_abline(intercept=coefficients(fit)[1], slope=coefficients(fit)[2], col='blue')
p
p <- p + geom_abline(intercept=coefficients(fit)[1], slope=coefficients(fit)[3], col='blue')
p
coefficients(fit)
fit <- lm(mtemp ~ mheight, data = Apr.30.sundata)
summary(fit)
p <- ggplot(Apr.30.sundata, aes(mheight, mtemp, label = nodeid))
p <- p + geom_point()
p <- p + xlab("Height (m)")
p <- p + ylab("Temperature (C)")
p <- p + geom_abline(intercept=coefficients(fit)[1], slope=coefficients(fit)[2], col='blue')
p
p <- p + ggtitle("Temp vs. Height")
p
p <- ggplot(Apr.30.sundata, aes(msunlight, mtemp, label = nodeid))
p <- p + geom_point()
p <- p + xlab("Light (umol/m^2/s)")
p <- p + ylab("Temperature (C)")
p <- p + geom_abline(intercept=coefficients(fit)[1], slope=coefficients(fit)[2], col='blue')
p <- p + ggtitle("Temp vs. Height")
p
fit <- lm(mtemp ~ msunlight, data = Apr.30.sundata)
summary(fit)
p <- ggplot(Apr.30.sundata, aes(msunlight, mtemp, label = nodeid))
p <- p + geom_point()
p <- p + xlab("Light (umol/m^2/s)")
p <- p + ylab("Temperature (C)")
p <- p + geom_abline(intercept=coefficients(fit)[1], slope=coefficients(fit)[2], col='blue')
p <- p + ggtitle("Temp vs. Height")
p
fit <- lm(mtemp ~ mheight + msunlight, data = Apr.30.sundata)
p <- ggplot(Apr.30.sundata, aes(mheight, mtemp, label = nodeid))
p <- p + geom_point()
p <- p + xlab("Height (m)")
p <- p + ylab("Temperature (C)")
p <- p + geom_abline(intercept=coefficients(fit)[1], slope=coefficients(fit)[2], col='blue')
p <- p + ggtitle("Temp vs. Height")
p
p <- ggplot(Apr.30.sundata, aes(msunlight, mtemp, label = nodeid))
p <- p + geom_point()
p <- p + xlab("Light (umol/m^2/s)")
p <- p + ylab("Temperature (C)")
p <- p + geom_abline(intercept=coefficients(fit)[1], slope=coefficients(fit)[3], col='blue')
p <- p + ggtitle("Temp vs. Height")
p
p <- p + geom_abline(intercept=coefficients(fit)[1], slope=coefficients(fit)[3], col='blue')
p <- p + ggtitle("Temp vs. Height")
p
coefficients
coefficients(fit)
fit <- lm(mtemp ~ mheight + msunlight, data = Apr.30.sundata)
summary(fit)
p <- ggplot(Apr.30.sundata, aes(mheight, mtemp, label = nodeid))
p <- p + geom_point()
p <- p + xlab("Height (m)")
p <- p + ylab("Temperature (C)")
p <- p + geom_abline(intercept=coefficients(fit)[1], slope=coefficients(fit)[2], col='blue')
p <- p + ggtitle("Temp vs. Height")
p
p <- ggplot(Apr.30.sundata, aes(msunlight, mtemp, label = nodeid))
p <- p + geom_point()
p <- p + xlab("Light (umol/m^2/s)")
p <- p + ylab("Temperature (C)")
p <- p + geom_abline(intercept=coefficients(fit)[1], slope=coefficients(fit)[3], col='blue')
p <- p + ggtitle("Temp vs. Height")
p
coefficients
fit <- glm(mtemp ~ mheight + msunlight, data = Apr.30.sundata)
summary(fit)
coefficients(Fit)
coefficients(fit)
p <- ggplot(Apr.30.sundata, aes(mheight, mtemp, label = nodeid))
p <- p + geom_point()
p <- p + xlab("Height (m)")
p <- p + ylab("Temperature (C)")
p <- p + geom_abline(intercept=coefficients(fit)[1], slope=coefficients(fit)[2], col='blue')
p <- p + ggtitle("Temp vs. Height")
p
p <- ggplot(Apr.30.sundata, aes(msunlight, mtemp, label = nodeid))
p <- p + geom_point()
p <- p + xlab("Light (umol/m^2/s)")
p <- p + ylab("Temperature (C)")
p <- p + geom_abline(intercept=coefficients(fit)[1], slope=coefficients(fit)[3], col='blue')
p <- p + ggtitle("Temp vs. Height")
p
coefficients(fit)
p <- ggplot(Apr.30.sundata, aes(mheight, mtemp, label = nodeid))
p <- p + geom_point()
p <- p + xlab("Height (m)")
p <- p + ylab("Temperature (C)")
p <- p + geom_abline(intercept=coefficients(fit)[1], slope=coefficients(fit)[2], col='blue')
p <- p + ggtitle("Temp vs. Height")
p
p <- ggplot(Apr.30.sundata, aes(msunlight, mtemp, label = nodeid))
p <- p + geom_point()
p <- p + xlab("Light (umol/m^2/s)")
p <- p + ylab("Temperature (C)")
p <- p + geom_abline(intercept=coefficients(fit)[1], slope=coefficients(fit)[3], col='blue')
p <- p + ggtitle("Temp vs. Height")
p
fit <- glm(mtemp ~ mheight + msunlight, data = Apr.30.sundata)
summary(fit)
fit <- glm(mtemp ~ mheight + msunlight, data = Apr.30.sundata)
summary(fit)
coefficients(fit)
p <- p + geom_abline(intercept=1.223933e+01, slope=3.803833e-02, col='blue')
p <- p + ggtitle("Temp vs. Height")
p
p <- ggplot(Apr.30.sundata, aes(mheight, mtemp, label = nodeid))
p <- p + geom_point()
p <- p + xlab("Height (m)")
p <- p + ylab("Temperature (C)")
p <- p + geom_abline(intercept=1.223933e+01, slope=3.803833e-02, col='blue')
p <- p + ggtitle("Temp vs. Height")
p
fit <- lm(mtemp ~ mheight + msunlight, data = Apr.30.sundata)
summary(fit)
coefficients(fit)
Apr.30.selection <- interior.selection[grepl("2004-05-01", interior.selection$datetime),]
Apr.30.selection.node <- Apr.30.selection[Apr.30.selection$nodeid == 197,]
p <- ggplot(Apr.30.selection.node, aes(x = datetime))
p <- ggplot(Apr.30.selection.node, aes(x = datetime))
p <- p + geom_line(aes(y = humid_temp, colour = "Temperature (C)"))
p <- p + ylab("Temperature (C)")
p <- p + xlab("Date and Time")
p <- p + ggtitle("Temperature and Humidity for Node 197 on April 30th 2017")
p <- p + geom_line(aes(y = humidity/5, colour = "Humidity (%)"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*5, name = "Humidity (%)"))
p <- p + theme(legend.title=element_blank())
p <- p + ylab("Temperature (C)")
p
cor(Apr.30.selection$epoch[Apr.30.selection$nodeid == 197], Apr.30.selection$humidity[Apr.30.selection$nodeid == 197])
cor(Apr.30.selection$epoch[Apr.30.selection$nodeid == 197], Apr.30.selection$humidity[Apr.30.selection$nodeid == 197])
Apr.30.selection$epoch[Apr.30.selection$nodeid == 197]
Apr.30.selection[Apr.30.selection$nodeid == 197]$epoch
Apr.30.selection[Apr.30.selection$nodeid == 197,]$epoch
Apr.30.selection[Apr.30.selection$nodeid == 197,]$humid_temp
Apr.30.selection[Apr.30.selection$nodeid == 197,]$humidity
Apr.30.selection <- interior.selection[grepl("2004-05-01", interior.selection$datetime),]
Apr.30.selection.node <- Apr.30.selection[Apr.30.selection$nodeid == 197,]
p <- ggplot(Apr.30.selection.node, aes(x = datetime))
p <- p + geom_line(aes(y = humid_temp, colour = "Temperature (C)"))
p <- p + ylab("Temperature (C)")
p <- p + xlab("Date and Time")
p <- p + ggtitle("Temperature and Humidity for Node 197 on April 30th 2017")
p <- p + geom_line(aes(y = humidity/5, colour = "Humidity (%)"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*5, name = "Humidity (%)"))
p <- p + theme(legend.title=element_blank())
p <- p + ylab("Temperature (C)")
p
p <- ggplot(Apr.30.selection.node, aes(x = datetime))
p <- p + geom_line(aes(y = humid_temp, colour = "Temperature (C)"))
# p <- p + scale_x_discrete(breaks=c("800","900","1000"), labels=c('fee','fi','fo'))
p <- p + ylab("Temperature (C)")
p <- p + xlab("Date and Time")
p <- p + ggtitle("Temperature and Humidity for Node 197 on April 30th 2017")
p <- p + geom_line(aes(y = humidity/3, colour = "Humidity (%)"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*5, name = "Humidity (%)"))
p <- p + theme(legend.title=element_blank())
p <- p + ylab("Temperature (C)")
# p <- scale_x_discrete(breaks=xtick_epochs, labels=Apr.30.selection.node[Apr.30.selection.node$epoch == xtick_epochs,]$datetime)
p
Apr.30.selection.node <- Apr.30.selection[Apr.30.selection$nodeid == 100,]
Apr.30.selection.node
unique(Apr.30.selection$nodeid)
Apr.30.selection.node <- Apr.30.selection[Apr.30.selection$nodeid == 105,]
p <- ggplot(Apr.30.selection.node, aes(x = datetime))
p <- p + geom_line(aes(y = humid_temp, colour = "Temperature (C)"))
# p <- p + scale_x_discrete(breaks=c("800","900","1000"), labels=c('fee','fi','fo'))
p <- p + ylab("Temperature (C)")
p <- p + xlab("Date and Time")
p <- p + ggtitle("Temperature and Humidity for Node 197 on April 30th 2017")
p <- p + geom_line(aes(y = humidity/3, colour = "Humidity (%)"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*5, name = "Humidity (%)"))
p <- p + theme(legend.title=element_blank())
p <- p + ylab("Temperature (C)")
# p <- scale_x_discrete(breaks=xtick_epochs, labels=Apr.30.selection.node[Apr.30.selection.node$epoch == xtick_epochs,]$datetime)
p
Apr.30.selection <- interior.selection[grepl("2004-05-01", interior.selection$datetime),]
Apr.30.selection.node <- Apr.30.selection[Apr.30.selection$nodeid == 197,]
# Citation: https://rpubs.com/MarkusLoew/226759
p <- ggplot(Apr.30.selection.node, aes(x = datetime))
p <- p + geom_line(aes(y = humid_temp, colour = "Temperature (C)"))
# p <- p + scale_x_discrete(breaks=c("800","900","1000"), labels=c('fee','fi','fo'))
p <- p + ylab("Temperature (C)")
p <- p + xlab("Date and Time")
p <- p + ggtitle("Temperature and Humidity for Node 197 on April 30th 2017")
p <- p + geom_line(aes(y = humidity/5, colour = "Humidity (%)"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*5, name = "Humidity (%)"))
p <- p + theme(legend.title=element_blank())
p <- p + ylab("Temperature (C)")
# p <- scale_x_discrete(breaks=xtick_epochs, labels=Apr.30.selection.node[Apr.30.selection.node$epoch == xtick_epochs,]$datetime)
p
Apr.30.selection <- interior.selection[grepl("2004-04-31", interior.selection$datetime),]
Apr.30.selection
Apr.30.selection <- interior.selection[grepl("2004-04-30", interior.selection$datetime),]
Apr.30.selection.node <- Apr.30.selection[Apr.30.selection$nodeid == 197,]
p <- ggplot(Apr.30.selection.node, aes(x = datetime))
p <- p + geom_line(aes(y = humid_temp, colour = "Temperature (C)"))
p <- p + ylab("Temperature (C)")
p <- p + xlab("Date and Time")
p <- p + ggtitle("Temperature and Humidity for Node 197 on April 30th 2017")
p <- p + geom_line(aes(y = humidity/5, colour = "Humidity (%)"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*5, name = "Humidity (%)"))
p <- p + theme(legend.title=element_blank())
p <- p + ylab("Temperature (C)")
p
May.01.selection <- interior.selection[grepl("2004-05-01", interior.selection$datetime),]
May.01.selection.node <- May.01.selection[May.01.selection$nodeid == 197,]
p <- ggplot(May.01.selection.node, aes(x = datetime))
p <- p + geom_line(aes(y = humid_temp, colour = "Temperature (C)"))
p <- p + ylab("Temperature (C)")
p <- p + xlab("Date and Time")
p <- p + ggtitle("Temperature and Humidity for Node 197 on April 30th 2017")
p <- p + geom_line(aes(y = humidity/5, colour = "Humidity (%)"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*5, name = "Humidity (%)"))
p <- p + theme(legend.title=element_blank())
p <- p + ylab("Temperature (C)")
p
p <- ggplot(May.01.selection.node, aes(x = datetime))
p <- p + geom_line(aes(y = humid_temp, colour = "Temperature (C)"))
# p <- p + scale_x_discrete(breaks=c("800","900","1000"), labels=c('fee','fi','fo'))
p <- p + ylab("Temperature (C)")
p <- p + xlab("Date and Time")
p <- p + ggtitle("Temperature and Humidity for Node 197 on April 30th 2017")
p <- p + geom_line(aes(y = humidity/3, colour = "Humidity (%)"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*3, name = "Humidity (%)"))
p <- p + theme(legend.title=element_blank())
p <- p + ylab("Temperature (C)")
# p <- scale_x_discrete(breaks=xtick_epochs, labels=Apr.30.selection.node[Apr.30.selection.node$epoch == xtick_epochs,]$datetime)
p
max(May.01.selection.node$humidity)
min(May.01.selection.node$humidity)
May.01.selection.node <- May.01.selection[May.01.selection$nodeid == 3,]
nrow(May.01.selection.node)
p <- ggplot(May.01.selection.node, aes(x = datetime))
p <- p + geom_line(aes(y = humid_temp, colour = "Temperature (C)"))
# p <- p + scale_x_discrete(breaks=c("800","900","1000"), labels=c('fee','fi','fo'))
p <- p + ylab("Temperature (C)")
p <- p + xlab("Date and Time")
p <- p + ggtitle("Temperature and Humidity for Node 197 on May 1st 2017")
p <- p + geom_line(aes(y = humidity/3, colour = "Humidity (%)"))
p <- p + scale_y_continuous(sec.axis = sec_axis(~.*3, name = "Humidity (%)"))
p <- p + theme(legend.title=element_blank())
p <- p + ylab("Temperature (C)")
# p <- scale_x_discrete(breaks=xtick_epochs, labels=Apr.30.selection.node[Apr.30.selection.node$epoch == xtick_epochs,]$datetime)
p
head(May.01.selection.node)

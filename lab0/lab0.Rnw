\documentclass{article}
\usepackage[utf8]{inputenc}

\usepackage{xcolor}
\usepackage{listings}
\lstset{basicstyle=\ttfamily,
showstringspaces=false,
commentstyle=\color{red},
keywordstyle=\color{blue}
}

\title{Lab 0}
\author{Alexander Brandt\\SID: 24092167}
\date{September 1 2017}

\begin{document}

\maketitle

\section{Loading the Data}

We load the USArrests in R, as well the file from the data/ directory.

<<results='markup', warning=FALSE, message=FALSE, fig.align='center', fig.height=3>>=
library("dplyr")
library("tidyverse")

setwd("/Users/Alex/Dropbox/STAT_215A/stat215a/lab0")

# Load the data from the assignment
statecoord <- read.table("data/stateCoord.txt")
# Load the library's data on US arrests
data("USArrests")
@

\section{Manipulating the Data}

Next we merge the datasets by introducing a new column which I will call ``state'' -- this is because dplyr doesn't really play well with column names natively.

<<results='markup', echo=TRUE, warning=FALSE, message=FALSE, fig.align='center', fig.height=3>>=
# Populate both with a common column so they can be merged (dplyr doesn't really like to merge)
# by row names
USArrests$state <- rownames(USArrests)
statecoord$state <- rownames(statecoord)
full_dataset <- inner_join(USArrests, statecoord, by = "state")
@


\section{Visualizing the Data}

First we plot ``Murder'' vs. ``Assault'' -- there seems to be a slightly positive trend:

<<results='markup', echo=TRUE, warning=FALSE, message=FALSE, fig.align='center'>>=
p <- ggplot(full_dataset, aes(Assault, Murder, ))
p + geom_point() 

@
  
Next we plot ``Rape'' vs. urban population.  We mark the outlier with a red dot.

<<results='markup', echo=TRUE, warning=FALSE, message=FALSE, fig.align='center'>>=
point_colors <- rep('black', times = nrow(full_dataset))
point_colors[full_dataset$UrbanPop < 50 & full_dataset$Rape > 40] <- 'red'
p <- ggplot(full_dataset, aes(UrbanPop, Rape, ))
p + geom_point(color = point_colors)
@

Then we remake these plots with names.  First ``Murder'' vs. ``Assault'':

<<results='markup', echo=TRUE, warning=FALSE, message=FALSE, fig.align='center'>>=
p <- ggplot(full_dataset, aes(Assault, Murder, label = full_dataset$state))
p + geom_text(size=2) + 
  labs(title = "Murders vs. Assault for the 50 US States") +
  xlim(0,350)
@

Then ``Rape'' vs. urban population:

<<results='markup', echo=TRUE, warning=FALSE, message=FALSE, fig.align='center'>>=
p <- ggplot(full_dataset, aes(UrbanPop, Rape, label = full_dataset$state))
p + geom_text(size=2, color = point_colors)
@

I decided to try the challenge exercise:

<<results='markup', tidy, echo=FALSE, warning=FALSE, message=FALSE, fig.align='center'>>=

# Got some help on this part from https://www.r-bloggers.com/us-state-maps-using-map_data/
# (hope that is an OK informal citation for this first lab, I'll footnote for Lab 1 and up).
library(maps)
library(Hmisc)

states <- map_data("state")
states$state <- capitalize(states$region)


map_with_arrests <- full_join(states, full_dataset, by = "state")

ggplot(data = map_with_arrests) + xlab("") + ylab("") + 
  ggtitle("Assault in the United States") +
  scale_fill_continuous(low="blue", high="red", guide="colorbar",na.value="white") +
  geom_polygon(aes(x = long.x, 
                   y = lat, 
                   fill = map_with_arrests$Assault, group = group), 
               color = "black") +
  coord_fixed(1.3) + 
  guides(fill = guide_legend(keywidth = 1, keyheight = 1, title="Assaults")) + 
  theme(panel.background=element_blank()
        ,axis.text.y=element_blank(),axis.ticks=element_blank(),
        axis.text.x=element_blank())

@

\section{Regression}

First we fit a linear regression using the lm function:

<<>>=
fit <- lm(Rape ~ UrbanPop, data=full_dataset)
summary(fit)
@

Next we plot the predicted values versus the residuals:

<<>>=
plot(fit, which = 1,)
@

There seems to be a spreading of the residuals as the fitted values increase.

<<>>=
# Fit with the outlier (Alaska) removed
no_outlier <- full_dataset[c(-2),]
fit2 <- lm(Rape ~ UrbanPop, data=no_outlier)

point_colors[point_colors=='red'] <- 'blue'
xvals <- seq(min(full_dataset$UrbanPop), max(full_dataset$UrbanPop))
p <- ggplot(full_dataset, aes(UrbanPop, Rape, label = full_dataset$state))
p + geom_point(color = point_colors) + 
  geom_abline(intercept=coefficients(fit)[1], slope=coefficients(fit)[2], col='blue') +
  geom_abline(intercept=coefficients(fit2)[1], slope=coefficients(fit2)[2], col='red')
@

When we compare the lines, we see the data set with the removed data point has a better fit (judged by p-value and \(R^2\) value).

<<>>=
summary(fit)
summary(fit2)
@

\end{document}